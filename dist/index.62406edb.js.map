{"mappings":"AAAA,MAAM,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,AAAC;AAC1D,uCAAuC;AAEvC,MAAM,UAAU,GAAG,iBAAkB;IACnC,IAAI;QACF,MAAM,QAAQ,GAAG,MAAM,KAAK,CAC1B,2EAA2E,CAC5E,AAAC;QACF,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,AAAC;QAEnC,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,IAAI,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAE1E,+BAA+B;QAE/B,IAAI,EAAE,MAAM,CAAA,EAAE,GAAG,IAAI,CAAC,IAAI,AAAC;QAC3B,MAAM,GAAG;YACP,EAAE,EAAE,MAAM,CAAC,EAAE;YACb,KAAK,EAAE,MAAM,CAAC,KAAK;YACnB,SAAS,EAAE,MAAM,CAAC,SAAS;YAC3B,SAAS,EAAE,MAAM,CAAC,UAAU;YAC5B,KAAK,EAAE,MAAM,CAAC,SAAS;YACvB,QAAQ,EAAE,MAAM,CAAC,QAAQ;YACzB,WAAW,EAAE,MAAM,CAAC,YAAY;YAChC,WAAW,EAAE,MAAM,CAAC,WAAW;SAChC,CAAC;QAEF,MAAM,MAAM,GAAG,CAAC;;iBAEH,EAAE,MAAM,CAAC,KAAK,CAAC;;eAEjB,EAAE,MAAM,CAAC,KAAK,CAAC;;;;;;;;;oEASsC,EAC1D,MAAM,CAAC,WAAW,CACnB;;;;;;;mEAO0D,EACzD,MAAM,CAAC,QAAQ,CAChB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAgCD,EAAE,MAAM,CAAC,WAAW,CACjB,GAAG,CAAC,CAAA,UAAU,GAAI;YACjB,OAAO,CAAC;;;;;yCAKqB,EAAE,UAAU,CAAC,QAAQ,CAAC;;wCAEvB,EAAE,UAAU,CAAC,IAAI,CAAC;YAC9C,EAAE,UAAU,CAAC,WAAW,CAAC;;;UAG3B,CAAC,CAAC;SACD,CAAC,CACD,IAAI,CAAC,EAAE,CAAC,CAAC;;;;;;;;yCAQqB,EAC/B,MAAM,CAAC,SAAS,CACjB;;;;;cAKK,EAAE,MAAM,CAAC,SAAS,CAAC;;;;;;;;UAQvB,CAAC,AAAC;QAER,eAAe,CAAC,kBAAkB,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;KAC1D,CAAC,OAAO,GAAG,EAAE;QACZ,KAAK,CAAC,GAAG,CAAC,CAAC;KACZ;CACF,AAAC;AAEF,UAAU,EAAE,CAAC;AACb,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAE7B,8BAA8B;CAE9B,QAAQ;CAER,kBAAkB;CAClB,gBAAgB;CAChB,IAAI;CAEJ,qBAAqB;CACrB,wDAAwD;CACxD,WAAW;CAEX,mBAAmB;CACnB,yBAAyB;CACzB,2CAA2C;CAC3C,sCAAsC;CACtC,gEAAgE;CAChE,qBAAqB;CACrB,SAAS;CACT,MAAM;CACN,IAAI;CAEJ,mCAAmC;CAEnC,kCAAkC;CAElC,8BAA8B;CAC9B,gFAAgF;CAChF,IAAI;CAEJ,6BAA6B;CAC7B,iDAAiD;CACjD,KAAK;CAEL,4DAA4D;CAC5D,UAAU;CACV,gEAAgE;CAChE,oBAAoB;CACpB,iBAAiB;CACjB,MAAM;CACN,IAAI;CAEJ,qBAAqB;CACrB,aAAa;CACb,IAAI;CAEJ,sBAAsB;CAEtB,IAAI;CAEJ,uBAAuB;CACvB,aAAa;CACb,OAAO;CACP,IAAI;CAEJ,cAAc","sources":["src/js/controller.js"],"sourcesContent":["const recipeContainer = document.querySelector('.recipe');\n///////////////////////////////////////\n\nconst showRecipe = async function () {\n  try {\n    const response = await fetch(\n      'https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bc886'\n    );\n    const data = await response.json();\n\n    if (!response.ok) throw new Error(`${data.message} (${response.status})`);\n\n    // console.log(response, data);\n\n    let { recipe } = data.data;\n    recipe = {\n      id: recipe.id,\n      title: recipe.title,\n      publisher: recipe.publisher,\n      sourceUrl: recipe.source_url,\n      image: recipe.image_url,\n      servings: recipe.servings,\n      cookingTime: recipe.cooking_time,\n      ingredients: recipe.ingredients,\n    };\n\n    const markup = ` \n    <figure class=\"recipe__fig\">\n      <img src= \"${recipe.image}\" alt=\"Tomato\" class=\"recipe__img\" />\n      <h1 class=\"recipe__title\">\n        <span> ${recipe.title}  </span>\n      </h1>\n    </figure>\n\n    <div class=\"recipe__details\">\n      <div class=\"recipe__info\">\n        <svg class=\"recipe__info-icon\">\n          <use href=\"src/img/icons.svg#icon-clock\"></use>\n        </svg>\n        <span class=\"recipe__info-data recipe__info-data--minutes\"> ${\n          recipe.cookingTime\n        } </span>\n        <span class=\"recipe__info-text\">minutes</span>\n      </div>\n      <div class=\"recipe__info\">\n        <svg class=\"recipe__info-icon\">\n          <use href=\"src/img/icons.svg#icon-users\"></use>\n        </svg>\n        <span class=\"recipe__info-data recipe__info-data--people\"> ${\n          recipe.servings\n        } </span>\n        <span class=\"recipe__info-text\">servings</span>\n\n        <div class=\"recipe__info-buttons\">\n          <button class=\"btn--tiny btn--increase-servings\">\n            <svg>\n              <use href=\"src/img/icons.svg#icon-minus-circle\"></use>\n            </svg>\n          </button>\n          <button class=\"btn--tiny btn--increase-servings\">\n            <svg>\n              <use href=\"src/img/icons.svg#icon-plus-circle\"></use>\n            </svg>\n          </button>\n        </div>\n      </div>\n\n      <div class=\"recipe__user-generated\">\n        <svg>\n          <use href=\"src/img/icons.svg#icon-user\"></use>\n        </svg>\n      </div>\n      <button class=\"btn--round\">\n        <svg class=\"\">\n          <use href=\"src/img/icons.svg#icon-bookmark-fill\"></use>\n        </svg>\n      </button>\n    </div>\n\n    <div class=\"recipe__ingredients\">\n      <h2 class=\"heading--2\">Recipe ingredients</h2>\n      <ul class=\"recipe__ingredient-list\">\n        ${recipe.ingredients\n          .map(ingredient => {\n            return `\n          <li class=\"recipe__ingredient\">\n          <svg class=\"recipe__icon\">\n            <use href=\"src/img/icons.svg#icon-check\"></use>\n          </svg>\n          <div class=\"recipe__quantity\"> ${ingredient.quantity} </div>\n          <div class=\"recipe__description\">\n            <span class=\"recipe__unit\"> ${ingredient.unit} </span>\n            ${ingredient.description}\n          </div>\n        </li>\n          `;\n          })\n          .join('')}\n      </ul>\n    </div>\n\n    <div class=\"recipe__directions\">\n      <h2 class=\"heading--2\">How to cook it</h2>\n      <p class=\"recipe__directions-text\">\n        This recipe was carefully designed and tested by\n        <span class=\"recipe__publisher\"> ${\n          recipe.publisher\n        }  </span>. Please check out\n        directions at their website.\n      </p>\n      <a\n        class=\"btn--small recipe__btn\"\n        href=\"${recipe.sourceUrl}\"\n        target=\"_blank\"\n      >\n        <span>Directions</span>\n        <svg class=\"search__icon\">\n          <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\n        </svg>\n      </a>\n    </div>`;\n\n    recipeContainer.insertAdjacentHTML('afterbegin', markup);\n  } catch (err) {\n    alert(err);\n  }\n};\n\nshowRecipe();\nconsole.log(recipeContainer);\n\n// await model.loadRecipe(id);\n\n// try {\n\n// } catch (err) {\n//   alert(err);\n// }\n\n// class RecipeView {\n//   #parentElement = document.querySelector('.recipe');\n//   #data;\n\n//   render(data) {\n//     this.#data = data;\n//     const markup = this.#generateMarkup;\n//     recipeContainer.innerHTML = '';\n//     recipeContainer.insertAdjecentHTML('afterbegin', markup);\n//     this.#clear();\n//     fa\n//   }\n// }\n\n// export default new RecipeView();\n\n// // publisher subscriber pattern\n\n// addHandlerRender(handler) {\n//   ['hashchange', 'load'].forEach(ev => window.addEventListener(ev, handler));\n// }\n\n// const init = function () {\n//   RecipeView.addHandlerRender(controlRecipes);\n// };\n\n// export const loadSearchResults = async function (query) {\n//   try {\n//     const data = await getJSON(`${API_URL}?search=${query}`);\n//   } catch (err) {\n//     throw err;\n//   }\n// }\n\n// class SearchView {\n//   #parent;\n// }\n\n// export class View {\n\n// }\n\n// _generateMarkcup() {\n//   return `\n//   `;\n// }\n\n// #pagination\n"],"names":[],"version":3,"file":"index.62406edb.js.map","sourceRoot":"/__parcel_source_root/"}